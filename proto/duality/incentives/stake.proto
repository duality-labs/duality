syntax = "proto3";
package duality.incentives;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/duality-labs/duality/x/incentives/types";

// Stake is a record of staked coin beginning at a specific time. It stores owner, 
// start_time and the number of coins locked. A stake record is deleted once the 
// coins in the stake record are all withdrawn.
message Stake {
  // ID is the unique id of the lock.
  // The ID of the lock is decided upon lock creation, incrementing by 1 for
  // every lock.
  uint64 ID = 1;

  // Owner is the account address of the lock owner.
  // Only the owner can modify the state of the lock.
  string owner = 2 [ (gogoproto.moretags) = "yaml:\"owner\"" ];

  // Start time is the time needed for a lock to mature after unlocking has
  // started.
  google.protobuf.Timestamp start_time = 3 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "start_time,omitempty",
    (gogoproto.moretags) = "yaml:\"start_time\""
  ];

  // Coins are the tokens locked within the lock, kept in the module account.
  repeated cosmos.base.v1beta1.Coin coins = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
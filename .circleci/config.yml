version: 2.1
orbs:
  go: circleci/go@1.7.3
jobs:
  go-tests:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.19.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Create a temp directory for artifacts
          command: mkdir -p /tmp/artifacts
      - run:
          name: Run tests
          command: |
            go test ./... -coverprofile=c.out -v
            go tool cover -html=c.out -o /tmp/artifacts/coverage.html
      - store_artifacts:
          path: /tmp/artifacts
  heighliner-build:
    working_directory: ~/repo
    machine: # executor type
      image: ubuntu-2004:2023.04.2 # recommended linux image - includes Ubuntu 20.04, docker 19.03.13, docker-compose 1.27.4
    resource_class: large
    steps:
      - go/install:
          version: "1.18"
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update && sudo apt-get install -y awscli
      - run:
          name: Install heighliner
          command: |
            git clone -b v1.2.0 https://github.com/strangelove-ventures/heighliner
            cd heighliner
            go build
            go install
      - checkout:
          path: ./duality
      - run:
          name: Build duality docker image
          working_directory: ./duality
          command: |
            TAG="${CIRCLE_TAG:-${CIRCLE_SHA1}}"
            heighliner build -c duality --local -t ${TAG}
      - run:
          name: Authenticate with github
          command: |
            echo $GH_CR_TOKEN | docker login ghcr.io -u USERNAME --password-stdin
      ## This could be its own step only for tagged builds
      - run:
          name: Push to ECR
          command: |
            TAG="${CIRCLE_TAG:-${CIRCLE_SHA1}}"
            docker tag duality:${TAG} 137158674376.dkr.ecr.us-west-2.amazonaws.com/devnet:${TAG}
      - run:
          name: Create a temp directory for docker image
          command: mkdir -p ./tmp/docker
      - run:
          name: Save Docker Image
          command: docker save --output ./tmp/docker/duality.tar duality
      - persist_to_workspace:
          root: ./tmp
          paths:
            - docker
  ictest:
    working_directory: ~/repo
    machine: # executor type
      image: ubuntu-2004:2023.04.2 # recommended linux image - includes Ubuntu 20.04, docker 19.03.13, docker-compose 1.27.4
    resource_class: large
    steps:
      - go/install:
          version: "1.18"
      - checkout:
          path: ./duality
      - attach_workspace:
          at: ./tmp
      - run:
          name: load docker image
          command: docker load -i ./tmp/docker/duality.tar
      - run:
          name: Run tests
          working_directory: ./duality/interchaintest
          command: go test -race -timeout 1h -v -run . 
  binary-build:
    working_directory: ~/repo
    docker:
      - image: ignitehq/cli:v0.27.1
    steps:
      - checkout
      - run:
          name: Create a temp directory for artifacts
          command: mkdir -p /tmp/artifacts
      - run:
          name: Build chain binary
          command: ignite chain build -o /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
  codegen-check:
    working_directory: ~/repo
    docker:
      - image: ignitehq/cli:v0.27.1
    steps:
      - checkout
      - run:
          name: Run go mod tidy
          command: go mod tidy
      - run:
          name: Run ignite generate proto-go
          command: ignite generate proto-go --yes
      - run:
          name: Ensure go.sum, and proto bindings are up-to-date in VC
          command: |
            CHANGES=$(git ls-files -m)
            [[ -n "$CHANGES" ]] && { echo -e "Untracked files created by go mod tidy:\n$CHANGES" ; exit 1; }\
            || { echo "No new files detected" ; exit 0; }
  binary-release-build:
    working_directory: ~/repo
    docker:
      - image: ignitehq/cli:v0.27.1
    steps:
      - checkout
      - run:
          name: Create a temp directory for artifacts
          command: mkdir -p ./tmp/artifacts/release
      - run:
          name: Build chain binary
          command: ignite chain build  --release -t linux:amd64 -t darwin:amd64 -o ./tmp/artifacts/release --clear-cache
      - persist_to_workspace:
          root: ./tmp/artifacts
          paths:
            - release
  publish-github-release:
    docker:
      - image: cimg/go:1.19.3
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - attach_workspace:
          at: ./tmp/artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go install github.com/tcnksm/ghr@v0.16.0
            ghr -t "${GITHUB_TOKEN}" -u "${CIRCLE_PROJECT_USERNAME}" -r "${CIRCLE_PROJECT_REPONAME}" -c "${CIRCLE_SHA1}" -delete ${CIRCLE_TAG} ./tmp/artifacts/release
  lint:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.19.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install GolangCI-Lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.52.2
      - run:
          name: Run GolangCI-Lint
          command: "./bin/golangci-lint run --out-format colored-line-number:linter.txt --timeout 6m"
      - store_artifacts:
          path: ./linter.txt

workflows:
  version: 2
  full_test_suite:
    jobs:
      - codegen-check
      - go-tests
      - heighliner-build:
          context:
            - GITHUB_CREDS
      - binary-build
  lint:
    jobs:
      - lint
  publish-release-maybe:
    jobs:
      - go-tests:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - binary-release-build:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - publish-github-release:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          context:
            - GITHUB_CREDS
          requires:
            - go-tests
            - binary-release-build

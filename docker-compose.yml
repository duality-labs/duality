version: "3"

services:
  dualitynode0:
    container_name: dualitynode0
    build:
      context: .
    command: >
      /bin/sh -c "
        # prevent 'local network address' warning from showing
        sed -i 's/addr_book_strict = true/addr_book_strict = false/g' /data/node$$ID/dualityd/config/config.toml;
        # overwrite CORS rules to allow browser testing and development with frontend local builds
        sed -i 's/enabled-unsafe-cors = false/enabled-unsafe-cors = true/g' /data/node$$ID/dualityd/config/app.toml;
        sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = [\"*\", ]/g' /data/node$$ID/dualityd/config/config.toml;
        echo '\n\n[rpc]\ncors_allowed_origins = [\"*\"]' >> /data/node$$ID/dualityd/config/app.toml
        # combine custom chain initial state with testnet initial state configuration
        node -p \"require('./rewrite-genesis.js')('/data/node$$ID/dualityd/config/genesis.json', '/root/.duality/config/genesis.json')\";
        # start chain from appropriate configuration files
        dualityd --home /data/node$$ID/dualityd start --moniker duality;
      "
    environment:
      - DEBUG=1
      - ID=0
      - LOG=${LOG:-simd.log}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    ports:
      - "26656-26657:26656-26657"
      - "1317:1317"
      - "9090:9090"
      - "2345:2345"
    volumes:
      - ./.testnets:/data:Z
    networks:
      localnet:
        ipv4_address: 192.168.10.2

  dualitynode1:
    container_name: dualitynode1
    build:
      context: .
    command: >
      /bin/sh -c "
        # prevent 'local network address' warning from showing
        sed -i 's/addr_book_strict = true/addr_book_strict = false/g' /data/node$$ID/dualityd/config/config.toml;
        # overwrite CORS rules to allow browser testing and development with frontend local builds
        sed -i 's/enabled-unsafe-cors = false/enabled-unsafe-cors = true/g' /data/node$$ID/dualityd/config/app.toml;
        sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = [\"*\", ]/g' /data/node$$ID/dualityd/config/config.toml;
        echo '\n\n[rpc]\ncors_allowed_origins = [\"*\"]' >> /data/node$$ID/dualityd/config/app.toml
        # combine custom chain initial state with testnet initial state configuration
        node -p \"require('./rewrite-genesis.js')('/data/node$$ID/dualityd/config/genesis.json', '/root/.duality/config/genesis.json')\";
        # start chain from appropriate configuration files
        dualityd --home /data/node$$ID/dualityd start --moniker duality;
      "
    environment:
      - DEBUG=0
      - ID=1
      - LOG=${LOG:-simd.log}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    ports:
      - "26666-26667:26656-26657"
      - "1318:1317"
      - "9091:9090"
      - "2346:2345"
    volumes:
      - ./.testnets:/data:Z
    networks:
      localnet:
        ipv4_address: 192.168.10.3

  dualitynode2:
    container_name: dualitynode2
    build:
      context: .
    command: >
      /bin/sh -c "
        # prevent 'local network address' warning from showing
        sed -i 's/addr_book_strict = true/addr_book_strict = false/g' /data/node$$ID/dualityd/config/config.toml;
        # overwrite CORS rules to allow browser testing and development with frontend local builds
        sed -i 's/enabled-unsafe-cors = false/enabled-unsafe-cors = true/g' /data/node$$ID/dualityd/config/app.toml;
        sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = [\"*\", ]/g' /data/node$$ID/dualityd/config/config.toml;
        echo '\n\n[rpc]\ncors_allowed_origins = [\"*\"]' >> /data/node$$ID/dualityd/config/app.toml
        # combine custom chain initial state with testnet initial state configuration
        node -p \"require('./rewrite-genesis.js')('/data/node$$ID/dualityd/config/genesis.json', '/root/.duality/config/genesis.json')\";
        # start chain from appropriate configuration files
        dualityd --home /data/node$$ID/dualityd start --moniker duality;
      "
    environment:
      - DEBUG=0
      - ID=2
      - LOG=${LOG:-simd.log}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    ports:
      - "26676-26677:26656-26657"
      - "1319:1317"
      - "9092:9090"
      - "2347:2345"
    volumes:
      - ./.testnets:/data:Z
    networks:
      localnet:
        ipv4_address: 192.168.10.4

  dualitynode3:
    container_name: dualitynode3
    build:
      context: .
    command: >
      /bin/sh -c "
        # prevent 'local network address' warning from showing
        sed -i 's/addr_book_strict = true/addr_book_strict = false/g' /data/node$$ID/dualityd/config/config.toml;
        # overwrite CORS rules to allow browser testing and development with frontend local builds
        sed -i 's/enabled-unsafe-cors = false/enabled-unsafe-cors = true/g' /data/node$$ID/dualityd/config/app.toml;
        sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = [\"*\", ]/g' /data/node$$ID/dualityd/config/config.toml;
        echo '\n\n[rpc]\ncors_allowed_origins = [\"*\"]' >> /data/node$$ID/dualityd/config/app.toml
        # combine custom chain initial state with testnet initial state configuration
        node -p \"require('./rewrite-genesis.js')('/data/node$$ID/dualityd/config/genesis.json', '/root/.duality/config/genesis.json')\";
        # start chain from appropriate configuration files
        dualityd --home /data/node$$ID/dualityd start --moniker duality;
      "
    environment:
      - DEBUG=0
      - ID=3
      - LOG=${LOG:-simd.log}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    ports:
      - "26686-26687:26656-26657"
      - "1320:1317"
      - "9093:9090"
      - "2348:2345"
    volumes:
      - ./.testnets:/data:Z
    networks:
      localnet:
        ipv4_address: 192.168.10.5

networks:
  localnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/25

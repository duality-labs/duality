# get testnet configurations
FROM interchainio/simapp:v0.45.4 as testnetconfig
# generate base chain testnet configurations /root/.testnet
RUN simd testnet init-files \
    --v 4 \
    -o .testnet \
    --starting-ip-address 192.168.10.2 \
    --keyring-backend test \
    --chain-id duality \
    --node-daemon-home dualityd

# [Choice] Go version (use -bullseye variants on local arm64/Apple Silicon): 1, 1.16, 1.17, 1-bullseye, 1.16-bullseye, 1.17-bullseye, 1-buster, 1.16-buster, 1.17-buster
FROM golang:1.18-bullseye

# install additional OS packages.
RUN apt update && \
    apt upgrade -y

RUN apt-get install -y \
    build-essential \
    ca-certificates \
    curl

# [Choice] Node.js version: none, lts/*, 16, 14, 12, 10
ARG NODE_VERSION="16.14.2"
RUN curl -fsSL https://deb.nodesource.com/setup_$NODE_VERSION | bash -
RUN apt-get install -y nodejs

WORKDIR /usr/src

# Get Go dependencies
COPY go.mod ./go.mod
COPY go.sum ./go.sum
RUN go mod download

# Copy work files (but not Dockerfile: to avoid invalidating caches while developing)
COPY app ./app
COPY cmd ./cmd
COPY docs ./docs
COPY proto ./proto
COPY testutil ./testutil
COPY vue ./vue
COPY x ./x
COPY config.yml ./config.yml

# compile dualityd
RUN go install ./cmd/dualityd

# create duality chain config files
RUN dualityd init duality

# get testnet config files
ARG NODE_ID
COPY --from=testnetconfig /root/.testnet/node$NODE_ID /data/

# merge genesis files together
COPY docker-testnet-genesis.js ./docker-testnet-genesis.js
RUN node -p "require('./docker-testnet-genesis.js')('/data/dualityd/config/genesis.json', '/root/.duality/config/genesis.json')";

# modify node configuration files
# prevent 'local network address' warning from showing
RUN sed -i 's/addr_book_strict = true/addr_book_strict = false/g' /data/dualityd/config/config.toml;
# overwrite CORS rules to allow browser testing and development with frontend local builds
RUN sed -i 's/enabled-unsafe-cors = false/enabled-unsafe-cors = true/g' /data/dualityd/config/app.toml;
RUN sed -i 's/cors_allowed_origins = \[\]/cors_allowed_origins = ["*", ]/g' /data/dualityd/config/config.toml;
RUN echo '\n\n[rpc]\ncors_allowed_origins = ["*"]' >> /data/dualityd/config/app.toml

# see docs for exposed ports:
#   https://docs.ignite.com/kb/config.html#host
EXPOSE 26657
EXPOSE 26656
EXPOSE 6060
EXPOSE 9090
EXPOSE 1317

# default to serving the chain with the modified testnet data
CMD ["dualityd", "--home", "/data/dualityd", "start", "--moniker", "duality"]
